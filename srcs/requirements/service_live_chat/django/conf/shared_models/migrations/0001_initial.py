# Generated by Django 5.2 on 2025-04-29 19:53

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Friendship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('rejected', 'Rejected')], default='pending', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('victory', models.PositiveIntegerField(default=0)),
                ('defeat', models.PositiveIntegerField(default=0)),
                ('online', models.BooleanField(default=False)),
                ('last_seen', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, default='', max_length=500)),
                ('avatar', models.ImageField(blank=True, default='avatars/default.jpg', null=True, upload_to='avatars/')),
                ('friends', models.ManyToManyField(related_name='friends_of', through='shared_models.Friendship', to='shared_models.player')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='player_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='friendship',
            name='player_1',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='friendship_requests', to='shared_models.player'),
        ),
        migrations.AddField(
            model_name='friendship',
            name='player_2',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='friendships', to='shared_models.player'),
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=30)),
                ('status', models.CharField(choices=[('Ouvert', 'Ouvert'), ('En cours', 'En Cours'), ('Terminée', 'Termine')], default='Ouvert', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('max_score_per_round', models.PositiveIntegerField(default=3)),
                ('number_of_rounds', models.PositiveIntegerField(default=3)),
                ('player_1', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='player1_tournament', to='shared_models.player')),
                ('player_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='player2_tournament', to='shared_models.player')),
                ('player_3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='player3_tournament', to='shared_models.player')),
                ('player_4', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='player4_tournament', to='shared_models.player')),
                ('winner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='won_tournaments', to='shared_models.player')),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_number', models.PositiveIntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('En attente', 'En Attente'), ('Acceptée', 'Acceptee'), ('Refusée', 'Refusee'), ('En cours', 'En Cours'), ('Terminée', 'Termine'), ('Annulée', 'Annulee')], default='En cours', max_length=10)),
                ('number_of_rounds', models.PositiveIntegerField(default=1)),
                ('max_score_per_round', models.PositiveIntegerField(default=3)),
                ('type', models.CharField(choices=[('IA', 'Ia'), ('Normal', 'Normal'), ('Tournois', 'Tournament')], default='Normal', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('player_1', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='matches_as_player_1', to='shared_models.player')),
                ('player_2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='matches_as_player_2', to='shared_models.player')),
                ('winner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='won_matches', to='shared_models.player')),
                ('tournament', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tournament', to='shared_models.tournament')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='friendship',
            unique_together={('player_1', 'player_2')},
        ),
        migrations.CreateModel(
            name='Block',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('blocked', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocked_players', to='shared_models.player')),
                ('blocker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocked_by', to='shared_models.player')),
            ],
            options={
                'unique_together': {('blocker', 'blocked')},
            },
        ),
    ]
