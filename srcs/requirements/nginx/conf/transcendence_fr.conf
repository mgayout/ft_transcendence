ssl_session_cache   shared:SSL:10m;
ssl_session_timeout 10m;

upstream frontend {
    server frontend:3000;
}

upstream service_1 {
    server service_app_django:8000;
}

upstream service_2 {
    server service_chat_django:8000;
}

upstream service_user_handler {
    server service_user_handler_django:8000;
}

upstream service_game_pong {
    server service_game_pong_django:8000;
}

upstream service_live_chat {
    server service_live_chat_django:8000;
}

server {
    listen				80;
    server_name			${DOMAIN_NAME};
	return 301 https://${DOMAIN_NAME}:443$request_uri;
}

server {
	listen 443 ssl http2;
	server_name ${DOMAIN_NAME};
# À decommenter pour la prod.
#	modsecurity on;
# À decommenter pour la prod.
#    modsecurity_rules_file /etc/nginx/modsec/main.conf;
	proxy_hide_header X-Powered-By;
	autoindex off;
    ssl_certificate	/etc/nginx/ssl/transcendence.pem;
    ssl_certificate_key	/etc/nginx/ssl/transcendence.key;
    ssl_protocols   TLSv1.2 TLSv1.3;
    ssl_ciphers		HIGH:!aNULL:!MD5;
	ssl_prefer_server_ciphers on;

	if ($host !~* "^${DOMAIN_NAME}$") {
		return 444;
	}

	# tells the browser that the application can only be accessed with https
	add_header Strict-Transport-Security "max-age=63072000000; includeSubDomains; preload" always;

	# prevent XSS attack on Internet Explorer and Safari
	add_header X-XSS-Protection "1; mode=block" always;

	# disable sniffing and risk
	add_header X-Content-Type-Options "nosniff" always;

	# Content Security Policy.
	# Keep the CSP directive online, otherwise the http2 protocol will break.
	add_header Content-Security-Policy " default-src 'self'; script-src 'self' https://cdn.jsdelivr.net; style-src 'self' https://cdn.jsdelivr.net https://cdnjs.cloudflare.com; img-src 'self' data:; font-src 'self' https://cdn.jsdelivr.net https://cdnjs.cloudflare.com; connect-src 'self'; object-src 'none'; form-action 'self'; frame-ancestors 'self'; upgrade-insecure-requests; base-uri 'self'; " always;

#	add_header Referrer-Policy "no-referrer" always;

	add_header Permissions-Policy "geolocation=(self), microphone=(self), camera=(self)" always;

	add_header Cache-Control "no-cache, no-store, must-revalidate";

	location / {
		rewrite ^/(?!.*\..*$).*$ / break;
		if ($request_method !~ ^(GET|HEAD)$ ) {
			return 444;
		}
		proxy_pass http://frontend;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "Upgrade";
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_redirect off;

		gzip_static on;
	}

	location /static/api {
		if ($request_method !~ ^(GET|HEAD)$ ) {
			return 444;
		}
		gzip_static on;
		alias /static/api;
#        internal;
	}

	location /api {
#		if ($request_method !~ ^(GET|HEAD)$ ) {
#			return 444;
#		}
		proxy_pass http://service_1;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_redirect off;

		gzip_static on;

		proxy_read_timeout 10;
		proxy_send_timeout 10;
		keepalive_timeout 5;

#Ligne a decommenter pour la mise en production
#        internal;
	}

	location /static/chat {
		if ($request_method !~ ^(GET|HEAD)$ ) {
			return 444;
		}
		gzip_static on;
		alias /static/chat;
#        internal;
	}

	location /chat {
#		if ($request_method !~ ^(GET|HEAD)$ ) {
#			return 444;
#		}
		proxy_pass http://service_2;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_redirect off;

		gzip_static on;

		proxy_read_timeout 10;
		proxy_send_timeout 10;
		keepalive_timeout 5;

#Ligne a decommenter pour la mise en production
#        internal;
	}

	location /static/users {
		if ($request_method !~ ^(GET|HEAD)$ ) {
			return 444;
		}
		gzip_static on;
		alias /static/users;
#        internal;
	}

	location /media {
		if ($request_method !~ ^(GET|HEAD)$ ) {
			return 444;
		}
		gzip_static on;
		alias /static/media;
	}

	location /users {
#		if ($request_method !~ ^(GET|HEAD)$ ) {
#			return 444;
#		}
		proxy_pass http://service_user_handler;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_redirect off;

		gzip_static on;

		proxy_read_timeout 10;
		proxy_send_timeout 10;
		keepalive_timeout 5;

#Ligne a decommenter pour la mise en production
#        internal;
	}

	location /static/pong {
		if ($request_method !~ ^(GET|HEAD)$ ) {
			return 444;
		}
		gzip_static on;
		alias /static/pong;
#        internal;
	}

	location /pong {
		proxy_pass http://service_game_pong;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "Upgrade";
		proxy_redirect off;

		gzip_static on;

		proxy_read_timeout 60;
		proxy_send_timeout 60;
		keepalive_timeout 65;

#Ligne a decommenter pour la mise en production
#        internal;
	}

	location /static/live_chat {
		if ($request_method !~ ^(GET|HEAD)$ ) {
			return 444;
		}
		gzip_static on;
		alias /static/live_chat;
#        internal;
	}

	location /live_chat {
		proxy_pass http://service_live_chat;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "Upgrade";
		proxy_redirect off;

		gzip_static on;

		proxy_read_timeout 60;
		proxy_send_timeout 60;
		keepalive_timeout 65;
	}


#Ligne a decommenter pour la mise en production

#    error_page 400 401 403 404 407 408 415 429 500 502 503 504 /erreur.html;
#
#    location /erreur.html {
#		if ($request_method !~ ^(GET|HEAD)$ ) {
#			return 444;
#		}
#		proxy_pass http://frontend;
#        proxy_http_version 1.1;
#        proxy_set_header Upgrade $http_upgrade;
#        proxy_set_header Connection "Upgrade";
#		proxy_set_header Host $host;
#		proxy_set_header X-Real-IP $remote_addr;
#		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#		proxy_set_header X-Forwarded-Proto $scheme;
#		proxy_redirect off;
#        internal;
#    }
}
