services:
  nginx:
    depends_on:
      - frontend
    build:
      context: ./requirements/nginx
      dockerfile: Dockerfile
    ports:
      - "4343:443"
    container_name: nginx
    env_file: ./env/.env_nginx
    init: true
    restart: always
    networks:
      network:
        ipv4_address: 172.20.0.2
    hostname: nginx
    volumes:
      - static_media:/static/media
      - static_live_chat:/static/live_chat
      - static_pong:/static/pong
      - static_users:/static/users

  frontend:
    depends_on:
      - service_user_handler_django
      - service_game_pong_django
      - service_live_chat_django
    build:
      context: ./requirements/frontend
      dockerfile: Dockerfile
      args:
        VITE_DOMAIN_NAME: 'localhost'
        VITE_PORT_NUM: 4343
    container_name: frontend
    init: true
    restart: always
    networks:
      network:
        ipv4_address: 172.20.0.3
    hostname: frontend

  service_user_handler_django:
    depends_on:
      - service_user_handler_postgresql
      - vault
    build:
      context: ./requirements/service_user_handler/django
      dockerfile: Dockerfile
    container_name: service_user_handler_django
    env_file:
      - ./env/.env_nginx
      - ./env/.env_service_user_handler_django
      - ./env/.env_service_user_handler_postgres
    init: true
    restart: always
    networks:
      network:
        ipv4_address: 172.20.0.40
    hostname: service_user_handler_django
    volumes:
      - static_media:/django_web_app/media
      - static_users:/django_web_app/staticfiles

  service_user_handler_postgresql:
    build:
      context: ./requirements/service_user_handler/postgresql
      dockerfile: Dockerfile
    container_name: service_user_handler_postgresql
    init: true
    restart: always
    networks:
      network:
        ipv4_address: 172.20.0.41
    hostname: service_user_handler_postgresql
    env_file:
      - ./env/.env_service_user_handler_postgres
    volumes:
      - user_handler_postgres_data:/var/lib/postgresql/data

  service_game_pong_django:
    depends_on:
      - service_game_pong_postgresql
      - vault
    build:
      context: ./requirements/service_game_pong/django
      dockerfile: Dockerfile
    container_name: service_game_pong_django
    env_file:
      - ./env/.env_nginx
      - ./env/.env_service_game_pong_django
      - ./env/.env_service_game_pong_postgres
    init: true
    restart: always
    networks:
      network:
        ipv4_address: 172.20.0.42
    hostname: service_game_pong_django
    volumes:
      - static_pong:/django_web_app/staticfiles

  service_game_pong_postgresql:
    build:
      context: ./requirements/service_game_pong/postgresql
      dockerfile: Dockerfile
    container_name: service_game_pong_postgresql
    init: true
    restart: always
    networks:
      network:
        ipv4_address: 172.20.0.43
    hostname: service_game_pong_postgresql
    env_file:
      - ./env/.env_service_game_pong_postgres
    volumes:
      - game_pong_postgres_data:/var/lib/postgresql/data

  service_live_chat_django:
    depends_on:
      - service_live_chat_postgresql
      - vault
    build:
      context: ./requirements/service_live_chat/django
      dockerfile: Dockerfile
    container_name: service_live_chat_django
    env_file:
      - ./env/.env_nginx
      - ./env/.env_service_live_chat_django
      - ./env/.env_service_live_chat_postgres
    init: true
    restart: always
    networks:
      network:
        ipv4_address: 172.20.0.44
    hostname: service_live_chat_django
    volumes:
      - static_live_chat:/django_web_app/staticfiles

  service_live_chat_postgresql:
    build:
      context: ./requirements/service_live_chat/postgresql
      dockerfile: Dockerfile
    container_name: service_live_chat_postgresql
    init: true
    restart: always
    networks:
      network:
        ipv4_address: 172.20.0.45
    hostname: service_live_chat_postgresql
    env_file:
      - ./env/.env_service_live_chat_postgres
    volumes:
      - live_chat_postgres_data:/var/lib/postgresql/data

  vault:
    depends_on:
      - vault_postgresql
    build:
      context: ./requirements/hashicorp_vault/vault
      dockerfile: Dockerfile
    container_name: vault_secrets
    secrets:
      - chababalegrand
    init: true
    restart: always
    networks:
      network:
        ipv4_address: 172.20.0.9
    env_file:
      - ./env/.env_vault
    hostname: vault
    cap_add:
      - IPC_LOCK

  vault_postgresql:
    build:
      context: ./requirements/hashicorp_vault/postgresql
      dockerfile: Dockerfile
    container_name: vault_postgresql
    init: true
    restart: always
    networks:
      network:
        ipv4_address: 172.20.0.10
    hostname: vault_postgresql
    env_file:
      - ./env/.env_vault_postgres

secrets:
  chababalegrand:
    file: sec.txt

networks:
  network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24

volumes:
  static_users:
  static_media:
  static_pong:
  static_live_chat:
  user_handler_postgres_data:
  game_pong_postgres_data:
  live_chat_postgres_data:
